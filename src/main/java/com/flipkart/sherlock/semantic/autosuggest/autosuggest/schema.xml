<?xml version="1.0" encoding="UTF-8" ?>
<schema name="autosuggest" version="1.5">

    <types>
        <fieldType name="long" class="solr.TrieLongField" precisionStep="8" sortMissingLast="true" omitNorms="true"
                   positionIncrementGap="0"/>
        <fieldType name="double" class="solr.TrieDoubleField" precisionStep="8" sortMissingLast="true" omitNorms="true"
                   positionIncrementGap="0"/>
        <fieldType name="date" class="solr.TrieDateField" precisionStep="6" sortMissingLast="true" omitNorms="true"
                   positionIncrementGap="0"/>

        <!--<fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="false"/>-->
        <!--<fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>-->
        <!--<fieldType name="int" class="solr.TrieIntField" omitNorms="true" positionIncrementGap="0"/>-->

        <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="false"
                   positionIncrementGap="0"/>
        <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="false"
                   positionIncrementGap="0"/>
        <fieldType name="int" class="solr.TrieIntField" precisionStep="8" sortMissingLast="true" omitNorms="false"
                   positionIncrementGap="0"/>
        <fieldType name="float" class="solr.TrieFloatField" precisionStep="8" sortMissingLast="true" omitNorms="false"
                   positionIncrementGap="0"/>
        <fieldType name="sfloat" class="solr.TrieFloatField" sortMissingLast="true" omitNorms="false"/>

        <fieldType name="string_lc" class="solr.TextField" indexed="true" stored="false" multiValued="true"
                   omitNorms="true" positionIncrementGap="100">
            <analyzer>
                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="\W+" replacement=" " replace="all"/>
            </analyzer>
        </fieldType>


        <fieldType name="text" class="solr.TextField" indexed="true" stored="false" multiValued="true"
                   positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_specialchars.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_index.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_both.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.CommonGramsFilterFactory" words="stopwords.txt"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_specialchars.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_query.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_both.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_check.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.CommonGramsQueryFilterFactory" words="stopwords.txt"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldType name="textMinimalStemmed" class="solr.TextField" positionIncrementGap="100"
                   autoGeneratePhraseQueries="true">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_specialchars.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_index.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_both.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" enablePositionIncrements="true"
                        words="stopwords.txt"/>
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_specialchars.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_query.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_both.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_check.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>


        <fieldType name="textStemmed" class="solr.TextField" positionIncrementGap="100"
                   autoGeneratePhraseQueries="true">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="com.flipkart.search.solr.FlipKStemFilterFactory" emitOnlyStems="false"/>
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_specialchars.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_index.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_both.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" enablePositionIncrements="true"
                        words="stopwords.txt"/>
                <filter class="com.flipkart.search.solr.FlipKStemFilterFactory" emitOnlyStems="false"/>
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_specialchars.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_query.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_both.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_check.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldType name="textSimple" class="solr.TextField">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldType name="textTight" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
            <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0"
                        catenateWords="1" catenateNumbers="1" catenateAll="1"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <!--<filter class="solr.EnglishPorterFilterFactory" protected="protwords.txt"/>-->
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100"
                   omitNorms="true" stored="false" multiValued="true" autoGeneratePhraseQueries="true">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StandardFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StandardFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldType name="textSpellPhrase" class="solr.TextField" positionIncrementGap="100"
                   omitNorms="true" stored="false" multiValued="true" autoGeneratePhraseQueries="true">
            <analyzer>
                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldType name="shingle" class="solr.TextField" positionIncrementGap="100"
                   stored="false" multiValued="true" autoGeneratePhraseQueries="true">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="'([a-rA-Rt-zT-Z])$" replacement="$1"
                        replace="all"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_check.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true"
                        words="stopwords.txt" enablePositionIncrements="true"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.ShingleFilterFactory" maxShingleSize="2" outputUnigrams="false"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="'([a-rA-Rt-zT-Z])$" replacement="$1"
                        replace="all"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true"
                        words="stopwords.txt" enablePositionIncrements="true"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.ShingleFilterFactory" maxShingleSize="2" outputUnigrams="false"/>
            </analyzer>
        </fieldType>

        <fieldType name="edgytext" class="solr.TextField" positionIncrementGap="100" omitNorms="true"
                   autoGeneratePhraseQueries="true">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_autosuggest.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="25"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>
        <fieldType name="text_approx" class="solr.TextField" indexed="true" stored="false" multiValued="true"
                   omitNorms="true" positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_index.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="ee" replacement="i" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="th" replacement="t" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="sh" replacement="s" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="([A-Za-z])\1" replacement="$1" replace="all"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_query.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="ee" replacement="i" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="th" replacement="t" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="sh" replacement="s" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="([A-Za-z])\1" replacement="$1" replace="all"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldType name="text_spanMatch" class="solr.TextField" indexed="true" stored="false" multiValued="true"
                   omitNorms="true" positionIncrementGap="100" autoGeneratePhraseQueries="true">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
                <filter class="com.flipkart.search.solr.FlipKStemFilterFactory" emitOnlyStems="false"/>
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_index.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>

            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
                <filter class="com.flipkart.search.solr.FlipKStemFilterFactory" emitOnlyStems="false"/>
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_index.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldType name="text_ns_spanMatch" class="solr.TextField" indexed="true" stored="false" multiValued="true"
                   omitNorms="true" positionIncrementGap="100" autoGeneratePhraseQueries="true">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
                <filter class="com.flipkart.search.solr.FlipKStemFilterFactory" emitOnlyStems="false"/>
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>

            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
                <filter class="com.flipkart.search.solr.FlipKStemFilterFactory" emitOnlyStems="false"/>
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldType name="text_fmatch" class="solr.TextField" indexed="true" stored="false" multiValued="true"
                   omitNorms="true" positionIncrementGap="100" autoGeneratePhraseQueries="true">
            <analyzer type="index">

                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="^" replacement="qhzzlfgnegre " replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="$" replacement=" qhzzlraqre" replace="all"/>
                <filter class="solr.WordDelimiterFilterFactory"
                        splitOnCaseChange="0" splitOnNumerics="0" stemEnglishPossessive="0"
                        generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0"
                        catenateAll="0"/>

                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_index.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="ee" replacement="i" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="th" replacement="t" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="sh" replacement="s" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="([A-Za-z])\1" replacement="$1" replace="all"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>

            <analyzer type="query">

                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="^" replacement="qhzzlfgnegre " replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="$" replacement=" qhzzlraqre" replace="all"/>
                <filter class="solr.WordDelimiterFilterFactory"
                        splitOnCaseChange="0" splitOnNumerics="0" stemEnglishPossessive="0"
                        generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0"
                        catenateAll="0"/>

                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                        catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_query.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="ee" replacement="i" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="th" replacement="t" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="sh" replacement="s" replace="all"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="([A-Za-z])\1" replacement="$1" replace="all"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="false"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>


        <fieldType name="edgytext_approx" class="solr.TextField" positionIncrementGap="100" omitNorms="true">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_both.txt" ignoreCase="true" expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_check.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_index.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_high.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms_log_analysis_low.txt" ignoreCase="true"
                        expand="true"/>
                <filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="25"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldType name="edgytext_phrase" class="solr.TextField" positionIncrementGap="100" omitNorms="true">
            <analyzer type="index">
                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="25"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="^(?&lt;=.{25}).*$" replacement=""/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>

        <fieldtype name="ignored" stored="false" indexed="false" class="solr.StrField"/>


        <fieldType name="textCommonGrams" class="solr.TextField" positionIncrementGap="100"
                   autoGeneratePhraseQueries="true">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0"
                        catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="1"/>
                <filter class="com.flipkart.search.solr.FlipCommonGramsFilterFactory" words="commonprefix.txt"
                        ignoreCase="true" emitOnlyCommonGrams="true"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="com.flipkart.search.solr.SingleQuoteFilterFactory"/>
                <filter class="com.flipkart.search.solr.NormalizeAbbreviationsFilterFactory"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0"
                        catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="1"/>
                <filter class="com.flipkart.search.solr.FlipCommonGramsFilterFactory" words="commonprefix.txt"
                        ignoreCase="true" emitOnlyCommonGrams="true"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"
                        enablePositionIncrements="true"/>
            </analyzer>
        </fieldType>

    </types>

    <fields>
        <field name="_version_" type="long" indexed="true" stored="true"/>
        <field name="id" type="string" indexed="true" stored="false" required="true"/>
        <field name="store-id" type="textStemmed" indexed="true" stored="true" required="false"/>
        <field name="storeName" type="textStemmed" indexed="true" stored="true" required="false"/>
        <field name="tagName" type="textStemmed" indexed="true" stored="true" required="false"/>
        <field name="viewName" type="textStemmed" indexed="true" stored="true" required="false"/>
        <field name="text" type="text" indexed="true" stored="false" required="false" multiValued="true"
               omitNorms="true"/>
        <field name="textSpell" type="text" indexed="true" stored="false" required="false" multiValued="true"
               omitNorms="true"/>

        <!--sint/sfloat are sortable ints or floats. Specially handled by sort for enabling range queries.-->
        <dynamicField name="*_sstring" type="string" stored="true" multiValued="false"/>
        <dynamicField name="*_smstring" type="string" stored="true" multiValued="true"/>

        <dynamicField name="*_int" type="int" stored="false" multiValued="false"/>
        <dynamicField name="*_sint" type="int" stored="true" multiValued="false"/>
        <dynamicField name="*_float" type="double" stored="false" multiValued="false"/>
        <dynamicField name="*_sfloat" type="double" stored="true" multiValued="false"/>
        <dynamicField name="*_boolean" type="boolean" stored="false" multiValued="false"/>
        <dynamicField name="*_date" type="date" stored="false" multiValued="true"/>
        <dynamicField name="*_text" type="text" stored="false" multiValued="true"/>
        <dynamicField name="*_textMinimalStemmed" type="textMinimalStemmed" stored="false" multiValued="true"/>
        <dynamicField name="*_textStemmed" type="textStemmed" stored="false" multiValued="true"/>
        <dynamicField name="*_string" type="string" stored="false" multiValued="true"/>
        <dynamicField name="*_lc" type="string_lc" stored="false" multiValued="true"/>
        <dynamicField name="*_approx" type="text_approx" stored="false" multiValued="true"/>
        <dynamicField name="*_fmatch" type="text_fmatch" stored="false" multiValued="true"/>
        <dynamicField name="*_spanMatch" type="text_spanMatch" stored="false" multiValued="true"/>
        <dynamicField name="*_ns_spanMatch" type="text_ns_spanMatch" stored="false" multiValued="true"/>
        <dynamicField name="*_edgytext" type="edgytext" stored="false" indexed="true" multiValued="true"/>
        <dynamicField name="*_edgytext_phrase" type="edgytext_phrase" stored="false" indexed="true" multiValued="true"/>
        <dynamicField name="*_edgytext_approx" type="edgytext_approx" stored="false" indexed="true" multiValued="true"/>

    </fields>

    <uniqueKey>id</uniqueKey>
    <defaultSearchField>storeName</defaultSearchField>
    <solrQueryParser defaultOperator="OR"/>

    <!--original-queries contain all the wrongly spelled queries which were corrected to the representative query-->
    <!--logged-qc-query and query_* are the same fields-->
    <copyField source="query_string" dest="text"/>
    <copyField source="spell-variation-original-queries_string" dest="textSpell"/>
    <copyField source="query_string" dest="text_edgytext"/>
    <copyField source="query_string" dest="text_edgytext_approx"/>
    <copyField source="logged-qc-query_sstring" dest="text_edgytext_phrase"/>
    <!--We still want the boosting to happen on the wrong query string, correction is just used in the application code-->
    <copyField source="logged-qc-query_sstring" dest="textSpell_edgytext_phrase"/>
    <copyField source="query_string" dest="prefix_edgytext"/>
    <copyField source="spell-variation-original-queries_string" dest="prefixSpell_edgytext"/>
    <copyField source="query_string" dest="qc-query-prefix_edgytext"/>
    <similarity class="com.flipkart.search.solr.CustomSimilarity"/>
</schema>
